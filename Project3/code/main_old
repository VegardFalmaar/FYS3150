
    if (solver_method == "sun_earth_euler") {
        double tol_orbit = 1e-2;
        our_system.bodies()[1].position[0] = 1;
        our_system.bodies()[1].velocity[1] = 2*M_PI;
        our_system.print_our_system();
        our_system.calculateEnergyAndAngularMomentum();
        Euler solver(dt);
        for (int timestep=0; timestep<N; timestep++) {
            our_system.calculateForces();
            our_system.bodies()[1].force = vec3(0,0,0); //want a stationary sun
            solver.integrateOneStep(our_system);
            if (timestep%print_step == 0) {
                our_system.writeToFile(output_file);
                testCirc_Orbit(our_system.bodies()[1], tol_orbit);
            }
        }
    }

    if (solver_method == "sun_earth_verlet") {
        double tol_orbit = 1e-7;
        double tol_kin = 1e-3;
        double tol_pot = 1e-3;
        our_system.bodies()[1].position[0] = 1;
        our_system.bodies()[1].velocity[1] = 2*M_PI;
        our_system.calculateEnergyAndAngularMomentum();
        our_system.print_our_system();
        Verlet solver(dt);
        for (int timestep=0; timestep<N; timestep++) {
            our_system.calculateForces();
            our_system.bodies()[1].force = vec3(0,0,0); //want a stationary sun
            solver.integrateOneStep(our_system);
            if (timestep%print_step == 0) {
                our_system.writeToFile(output_file);
                testKinetic_and_potential(our_system, tol_kin, tol_pot);
                testCirc_Orbit(our_system.bodies()[1], tol_orbit);
            }
        }
    }
    // if (solver_method == "mercury_rel") {
    //     our_system.remove_cm_velocity();
    //     Verlet solver(dt);
    //     for (int timestep=0; timestep<N; timestep++) {
    //         our_system.calculateRelForces();
    //         solver.integrateOneStep(our_system);
    //         if (timestep%print_step == 0) {
    //             our_system.writeToFile(output_file);
    //             our_system.calculateEnergyAndAngularMomentum();
    //     }
    // }
